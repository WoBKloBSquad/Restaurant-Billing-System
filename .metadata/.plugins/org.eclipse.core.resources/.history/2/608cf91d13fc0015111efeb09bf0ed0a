package com.github.wobklobsquad.restaurantbillingsystem.javaserver;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketTimeoutException;

public class Main extends Thread
{
   private ServerSocket serverSocket;
   
   public Main(int port) throws IOException
   {
      serverSocket = new ServerSocket(port);
   }

   public void run()
   {
      while(true)
      {
         try
         {
            System.out.println("Waiting for client on port " + serverSocket.getLocalPort() + "...");
            Socket server = serverSocket.accept();
            System.out.println("Just connected to " + server.getRemoteSocketAddress());
            DataInputStream in = new DataInputStream(server.getInputStream());
            DataOutputStream out = new DataOutputStream(server.getOutputStream());
            
            String[] cmd = in.readUTF().split("-");
            
            // Check if there is the add command
            if(cmd[0] == Commands.add) {
            	if(cmd[1] == Products.water) {
            		out.writeUTF("Succesfully added the water to the list");
            		System.out.println("Succesfully added the water to the list");
            	}
            }

            // Check if there is the remove command
            if(cmd[0] == Commands.remove) {
            	if(cmd[1] == Products.water) {
            		out.writeUTF("Succesfully removed the water to the list");
            		System.out.println("Succesfully removed the water to the list");
            	}
            }
            
            server.close();
         }catch(IOException e)
         {
            e.printStackTrace();
            break;
         }
      }
   }
   
   public static void main(String args[])
   {
	   if(args[0] == null) {
		   System.out.println("[SERVERE]: No argument for the port described! E.g.: java Server.jar [PORT]");
	  } else {
	      int port = Integer.parseInt(args[0]);
	      try
	      {
	         Thread t = new Main(port);
	         t.start();
	      }catch(IOException e)
	      {
	         e.printStackTrace();
	      }
	  }
   }
}