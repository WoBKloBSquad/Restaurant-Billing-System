package com.github.wobklobsquad.restaurantbillingsystem.javaserver;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketTimeoutException;

public class Main extends Thread
{
   private ServerSocket serverSocket;
   
   public Main(int port) throws IOException
   {
      serverSocket = new ServerSocket(port);
      serverSocket.setSoTimeout(10000);
   }

   public void run()
   {
      while(true)
      {
         try
         {
            System.out.println("Waiting for client on port " + serverSocket.getLocalPort() + "...");
            Socket server = serverSocket.accept();
            System.out.println("Just connected to " + server.getRemoteSocketAddress());
            DataInputStream in = new DataInputStream(server.getInputStream());
            System.out.println(in.readUTF());
            
            // Check if there is the add command
            String addCmd = "add";
            String removeCmd = "remove";
            
            String[] cmd = in.readUTF().split(" ");
            if(cmd[0] == addCmd) {
            	
            }

            // Check if there is the remove command
            if(in.readUTF() == removeCmd) {
            	
            }
            
            DataOutputStream out = new DataOutputStream(server.getOutputStream());
            out.writeUTF("Thank you for connecting to " + server.getLocalSocketAddress() + "\nGoodbye!");
            server.close();
         }catch(SocketTimeoutException s)
         {
            System.out.println("Socket timed out!");
            break;
         }catch(IOException e)
         {
            e.printStackTrace();
            break;
         }
      }
   }
   
   public static void main(String args[])
   {
      int port = Integer.parseInt(args[0]);
      try
      {
         Thread t = new Main(port);
         t.start();
      }catch(IOException e)
      {
         e.printStackTrace();
      }
   }
}